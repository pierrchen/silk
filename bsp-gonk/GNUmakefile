SHELL=/bin/bash

this_mkfile_dir := $(dir $(realpath $(lastword $(MAKEFILE_LIST))))
-include $(this_mkfile_dir)/../version/branch
BRANCH ?= unknown
export BRANCH

LOCALGOALS += \
  clean \
  tidyup \
  purell \
  zest \

ifneq (,$(filter $(MAKECMDGOALS),$(LOCALGOALS)))

# Cleans the out/ directory only
.PHONY: clean
clean:
	rm -rf out

# Removes repo projects from the working tree.
# Bring them back any time with |./sync -l|
# https://youtu.be/Or8iYWRg2w8
.PHONY: tidyup
tidyup:
	@{ \
    set -x; \
    rm -rf $$(repo forall -c 'echo $$REPO_PATH'); \
  }

# Kills "99.99%" of bugs by removing all local modifications while preserving
# your .repo/.
# (Be very careful!)
.PHONY: purell
purell:
	@{ \
    set -x; \
    rm -rf $$(repo forall -c 'echo $$REPO_PATH'); \
    git reset --hard HEAD; \
    git -C .. clean -dxf; \
    rm -f .repo/lastsync; \
    ./sync -l; \
  }

# https://youtu.be/1r_2fNiYkyE
# (Be certain!)
.PHONY: zest
zest:
	git reset --hard HEAD && git -C .. clean -dxff

else # Normal bsp build goals..

# Only bring in the BSP build system if one of the local goals have not been
# requested
ifeq (,$(wildcard .repo/manifest.xml))
$(error Please run |./sync|)
endif
ifndef SILK_ENVSETUP
$(error Please run |source build/envsetup.sh|)
endif
ifeq (,$(wildcard out/lastpatch.md5sum))
$(error Please run |source build/envsetup.sh| to apply bsp patches)
endif

include build/core/main.mk

# Attempt to detect stale manifests that can occur by a normal |git pull|.
# It's generally expected that one always runs at least |./sync -l| after each
# |git pull| to ensure the bsp tree is up to date.
include .repo/lastsync
.repo/lastsync: .repo/manifest.xml
	@echo ==============================================================
	@echo "Error: Repo manifest looks out of date, run |./sync|"
	@echo "       (or |touch .repo/lastsync| if you're sure)"
	@echo ==============================================================
	@false
include .repo/manifest.deps  # Generated by vendor/silk/build/vendorsetup.sh

endif

