From ef2c85f5f30cdcb5680e6f04aef4644d5151b1fc Mon Sep 17 00:00:00 2001
From: Michael Vines <mvines@silklabs.com>
Date: Thu, 29 Sep 2016 20:56:47 -0700
Subject: [PATCH] Revert "overlay: Request specific pipe type"

This reverts commit ab05b00fefd34a761dfaf1ccaf8ad14d325873f4.
---
 msm8226/liboverlay/overlay.cpp              | 21 ++++++++++++++-------
 msm8226/liboverlay/overlay.h                |  2 --
 msm8226/liboverlay/overlayCtrlData.h        |  7 -------
 msm8226/liboverlay/overlayMdp.cpp           | 17 -----------------
 msm8226/liboverlay/overlayMdp.h             |  2 --
 msm8226/liboverlay/pipes/overlayGenPipe.cpp |  4 ----
 msm8226/liboverlay/pipes/overlayGenPipe.h   |  2 --
 7 files changed, 14 insertions(+), 41 deletions(-)

diff --git a/msm8226/liboverlay/overlay.cpp b/msm8226/liboverlay/overlay.cpp
index de880c6..fe7bd2c 100644
--- a/msm8226/liboverlay/overlay.cpp
+++ b/msm8226/liboverlay/overlay.cpp
@@ -346,8 +346,20 @@ void Overlay::setSource(const utils::PipeArgs args,
         utils::eDest dest) {
     validate((int)dest);
 
-    setPipeType(dest, PipeBook::getPipeType(dest));
-    mPipeBook[dest].mPipe->setSource(args);
+    PipeArgs newArgs(args);
+    if(PipeBook::getPipeType(dest) == OV_MDP_PIPE_VG) {
+        setMdpFlags(newArgs.mdpFlags, OV_MDP_PIPE_SHARE);
+    } else {
+        clearMdpFlags(newArgs.mdpFlags, OV_MDP_PIPE_SHARE);
+    }
+
+    if(PipeBook::getPipeType(dest) == OV_MDP_PIPE_DMA) {
+        setMdpFlags(newArgs.mdpFlags, OV_MDP_PIPE_FORCE_DMA);
+    } else {
+        clearMdpFlags(newArgs.mdpFlags, OV_MDP_PIPE_FORCE_DMA);
+    }
+
+    mPipeBook[dest].mPipe->setSource(newArgs);
 }
 
 void Overlay::setVisualParams(const MetaData_t& metadata, utils::eDest dest) {
@@ -355,11 +367,6 @@ void Overlay::setVisualParams(const MetaData_t& metadata, utils::eDest dest) {
     mPipeBook[dest].mPipe->setVisualParams(metadata);
 }
 
-void Overlay::setPipeType(utils::eDest pipeIndex,
-        const utils::eMdpPipeType pType) {
-    mPipeBook[pipeIndex].mPipe->setPipeType(pType);
-}
-
 Overlay* Overlay::getInstance() {
     if(sInstance == NULL) {
         sInstance = new Overlay();
diff --git a/msm8226/liboverlay/overlay.h b/msm8226/liboverlay/overlay.h
index c8f68b0..99186db 100644
--- a/msm8226/liboverlay/overlay.h
+++ b/msm8226/liboverlay/overlay.h
@@ -179,8 +179,6 @@ private:
     static void initScalar();
     /* Destroys the scalar object using libscale.so */
     static void destroyScalar();
-    /* Sets the pipe type RGB/VG/DMA*/
-    void setPipeType(utils::eDest pipeIndex, const utils::eMdpPipeType pType);
 
     /* Just like a Facebook for pipes, but much less profile info */
     struct PipeBook {
diff --git a/msm8226/liboverlay/overlayCtrlData.h b/msm8226/liboverlay/overlayCtrlData.h
index 2eec98c..7265db4 100644
--- a/msm8226/liboverlay/overlayCtrlData.h
+++ b/msm8226/liboverlay/overlayCtrlData.h
@@ -65,8 +65,6 @@ public:
     void setPosition(const utils::Dim& dim);
     /* set mdp visual params using metadata */
     bool setVisualParams(const MetaData_t &metadata);
-    /* set pipe type RGB/DMA/VG */
-    void setPipeType(const utils::eMdpPipeType& pType);
     /* mdp set overlay/commit changes */
     bool commit();
 
@@ -159,11 +157,6 @@ inline bool Ctrl::setVisualParams(const MetaData_t &metadata)
     return true;
 }
 
-inline void Ctrl::setPipeType(const utils::eMdpPipeType& pType)
-{
-    mMdp->setPipeType(pType);
-}
-
 inline void Ctrl::dump() const {
     ALOGE("== Dump Ctrl start ==");
     mMdp->dump();
diff --git a/msm8226/liboverlay/overlayMdp.cpp b/msm8226/liboverlay/overlayMdp.cpp
index 7f9f136..da522f6 100644
--- a/msm8226/liboverlay/overlayMdp.cpp
+++ b/msm8226/liboverlay/overlayMdp.cpp
@@ -119,23 +119,6 @@ void MdpCtrl::setTransform(const utils::eTransform& orient) {
     mOrientation = static_cast<utils::eTransform>(rot);
 }
 
-void MdpCtrl::setPipeType(const utils::eMdpPipeType& pType){
-    switch((int) pType){
-        case utils::OV_MDP_PIPE_RGB:
-            mOVInfo.pipe_type = PIPE_TYPE_RGB;
-            break;
-        case utils::OV_MDP_PIPE_VG:
-            mOVInfo.pipe_type = PIPE_TYPE_VIG;
-            break;
-        case utils::OV_MDP_PIPE_DMA:
-            mOVInfo.pipe_type = PIPE_TYPE_DMA;
-            break;
-        default:
-            mOVInfo.pipe_type = PIPE_TYPE_AUTO;
-            break;
-    }
-}
-
 void MdpCtrl::doTransform() {
     setRotationFlags();
     utils::Whf whf = getSrcWhf();
diff --git a/msm8226/liboverlay/overlayMdp.h b/msm8226/liboverlay/overlayMdp.h
index cb8e057..38e5585 100644
--- a/msm8226/liboverlay/overlayMdp.h
+++ b/msm8226/liboverlay/overlayMdp.h
@@ -82,8 +82,6 @@ public:
     uint8_t getPriority() const;
     /* setVisualParam */
     bool setVisualParams(const MetaData_t& data);
-    /* sets pipe type RGB/DMA/VG */
-    void setPipeType(const utils::eMdpPipeType& pType);
 
     static bool validateAndSet(MdpCtrl* mdpCtrlArray[], const int& count,
             const int& fbFd);
diff --git a/msm8226/liboverlay/pipes/overlayGenPipe.cpp b/msm8226/liboverlay/pipes/overlayGenPipe.cpp
index aebaebf..37b45c9 100644
--- a/msm8226/liboverlay/pipes/overlayGenPipe.cpp
+++ b/msm8226/liboverlay/pipes/overlayGenPipe.cpp
@@ -66,10 +66,6 @@ bool GenericPipe::setVisualParams(const MetaData_t &metadata)
         return mCtrl->setVisualParams(metadata);
 }
 
-void GenericPipe::setPipeType(const utils::eMdpPipeType& pType) {
-    mCtrl->setPipeType(pType);
-}
-
 bool GenericPipe::commit() {
     return mCtrl->commit();
 }
diff --git a/msm8226/liboverlay/pipes/overlayGenPipe.h b/msm8226/liboverlay/pipes/overlayGenPipe.h
index 0a2639a..bb228a7 100644
--- a/msm8226/liboverlay/pipes/overlayGenPipe.h
+++ b/msm8226/liboverlay/pipes/overlayGenPipe.h
@@ -54,8 +54,6 @@ public:
     void setPosition(const utils::Dim& dim);
     /* set visual param */
     bool setVisualParams(const MetaData_t &metadata);
-    /* set pipe type RGB/DMA/VG */
-    void setPipeType(const utils::eMdpPipeType& pType);
     /* commit changes to the overlay "set"*/
     bool commit();
     /* Data APIs */
-- 
2.8.4 (Apple Git-73)

